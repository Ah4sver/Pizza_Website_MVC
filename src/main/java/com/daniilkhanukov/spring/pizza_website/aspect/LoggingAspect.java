package com.daniilkhanukov.spring.pizza_website.aspect;

import jakarta.servlet.http.HttpSession;
import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.*;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.security.Principal;
import java.util.Arrays;
import java.util.stream.Collectors;

@Aspect
@Component
public class LoggingAspect {

    private static final Logger logger = LoggerFactory.getLogger(LoggingAspect.class);

    @Before("execution(* com.daniilkhanukov.spring.pizza_website.controller.*.*(..))")
    public void logController(JoinPoint joinPoint) {
        logger.info("‚Üí {} args = {}",
                joinPoint.getSignature().toShortString(),
                Arrays.deepToString(joinPoint.getArgs()));
    }

    @AfterReturning(
            pointcut = "execution(* com.daniilkhanukov.spring.pizza_website.controller.*.*(..))",
            returning = "result")
    public void logControllerReturn(JoinPoint joinPoint, Object result) {
        logger.info("‚Üê {} returned = {}",
                joinPoint.getSignature().toShortString(), result);
    }

    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏
    @Around("execution(* com.daniilkhanukov.spring.pizza_website.service.*.*(..))")
    public Object logServicePerformance(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {
        long start = System.currentTimeMillis();
        Object ret = proceedingJoinPoint.proceed();
        long elapsed = System.currentTimeMillis() - start;
        logger.info("üïí {} executed in {} ms",
                proceedingJoinPoint.getSignature().toShortString(), elapsed);
        return ret;
    }


//    // 1. –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∏ —Å–µ—Ä–≤–∏—Å—ã, –∏—Å–∫–ª—é—á–∞—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
//    @Pointcut("within(com.daniilkhanukov.spring.pizza_website.controller..*) || " +
//            "within(com.daniilkhanukov.spring.pizza_website.service..*)")
//    public void applicationLayer() {}
//
//    // 2. –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –∏ —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
//    @Before("applicationLayer()")
//    public void logBefore(JoinPoint joinPoint) {
//        String method = joinPoint.getSignature().toShortString();
//        // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
//        String args = Arrays.stream(joinPoint.getArgs())
//                .filter(arg -> !(arg instanceof HttpSession)
//                        && !(arg instanceof Principal)
//                        && !(arg instanceof Authentication))
//                .map(Object::toString)
//                .collect(Collectors.joining(", ", "[", "]"));
//        logger.info("‚Üí {} args = {}", method, args);
//    }
//
//    // 3. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
//    @AfterReturning(pointcut = "applicationLayer()", returning = "result")
//    public void logAfterReturning(JoinPoint joinPoint, Object result) {
//        String method = joinPoint.getSignature().toShortString();
//        String repr = result != null ? result.toString() : "null";
//        logger.info("‚Üê {} returned = {}", method, repr);
//    }
//
//    // 4. –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
//    @Around("within(com.daniilkhanukov.spring.pizza_website.service..*)")
//    public Object logTiming(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {
//        long start = System.currentTimeMillis();
//        Object res = proceedingJoinPoint.proceed();
//        long elapsed = System.currentTimeMillis() - start;
//        String method = proceedingJoinPoint.getSignature().toShortString();
//        logger.info("üïí {} executed in {} ms", method, elapsed);
//        return res;
//    }

    // === Pointcuts ===
//
//    @Pointcut("within(com.daniilkhanukov.spring.pizza_website.controller..*)")
//    public void controllerLayer() {}
//
    @Pointcut("within(com.daniilkhanukov.spring.pizza_website.service..*)")
    public void serviceLayer() {}
//
//    @Pointcut("within(com.daniilkhanukov.spring.pizza_website.repository..*)")
//    public void repositoryLayer() {}
//
    @Pointcut("@annotation(org.springframework.transaction.annotation.Transactional)")
    public void transactionalMethods() {}
//
//    // === Advices ===
//
//    // 1. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
//    @Before("execution(* com.daniilkhanukov.spring.pizza_website..*(..))")
//    public void logBefore(JoinPoint joinPoint) {
//        String method = joinPoint.getSignature().toShortString();
//        String args = Arrays.deepToString(joinPoint.getArgs());
//        logger.info("‚Üí {} args = {}", method, args);
//    }
//
//    @Before("controllerLayer()")
//    public void logBeforeController(JoinPoint joinPoint) {
//        logger.info("HTTP Request ‚Üí {}.{}() args = {}",
//                joinPoint.getSignature().getDeclaringTypeName(),
//                joinPoint.getSignature().getName(),
//                Arrays.toString(joinPoint.getArgs()));
//    }
//
//    // 2. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å-–º–µ—Ç–æ–¥–æ–≤
//    @AfterReturning(pointcut="serviceLayer()", returning="result")
//    public void logAfterService(JoinPoint joinPoint, Object result) {
//        logger.info("Service Response ‚Üê {}.{}() returned = {}",
//                joinPoint.getSignature().getDeclaringTypeName(),
//                joinPoint.getSignature().getName(),
//                result);
//    }
//
    // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ —Å–µ—Ä–≤–∏—Å-—Å–ª–æ–µ
    @AfterThrowing(pointcut="serviceLayer()", throwing="ex")
    public void logAfterThrowing(JoinPoint joinPoint, Throwable ex) {
        logger.error("Service Exception ‚ùå {}.{}() cause = {}, message = {}",
                joinPoint.getSignature().getDeclaringTypeName(),
                joinPoint.getSignature().getName(),
                ex.getCause(), ex.getMessage());
    }
//
//    // 4. –ó–∞–º–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å-–º–µ—Ç–æ–¥–æ–≤
//    @Around("serviceLayer()")
//    public Object logAroundService(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {
//        long start = System.currentTimeMillis();
//        Object result = proceedingJoinPoint.proceed();
//        long elapsed = System.currentTimeMillis() - start;
//        if (logger.isInfoEnabled()) {
//            logger.info("Service Response ‚Üê {} returned = {}",
//                    proceedingJoinPoint.getSignature().toShortString(),
//                    result);
//            logger.info("Performance üïí {} executed in {} ms",
//                    proceedingJoinPoint.getSignature().toShortString(),
//                    elapsed);
//        }
//        return result;
//    }
//
//
    // 5. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω—ã–π –∞—É–¥–∏—Ç
    @Before("transactionalMethods()")
    public void logBeforeTx(JoinPoint joinPoint) {
        logger.info("TX START ‚è≥ {}.{}()",
                joinPoint.getSignature().getDeclaringTypeName(),
                joinPoint.getSignature().getName());
    }

    @After("transactionalMethods()")
    public void logAfterTx(JoinPoint joinPoint) {
        logger.info("TX END ‚úÖ {}.{}()",
                joinPoint.getSignature().getDeclaringTypeName(),
                joinPoint.getSignature().getName());
    }
//
//    // 6. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
//    @Before("repositoryLayer()")
//    public void logBeforeRepo(JoinPoint joinPoint) {
//        logger.debug("Repository Call ‚Üí {}.{}()",
//                joinPoint.getSignature().getDeclaringTypeName(),
//                joinPoint.getSignature().getName());
//    }

}
